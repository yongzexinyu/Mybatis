<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hp.dao.CustomerDAO">
  <resultMap id="BaseResultMap" type="com.hp.util.Customer">
    <id column="cno" jdbcType="INTEGER" property="cno" />
    <result column="empno" jdbcType="INTEGER" property="empno" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="sal" jdbcType="INTEGER" property="sal" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cno, empno, cname, sex, education, sal, tel, money, remarks
  </sql>
  <sql id="Base_Column_List1">
     cname, sex, education, sal
  </sql>
  <select id="selectByExample1" parameterType="com.hp.util.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List1" />0
    from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hp.util.CustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from customer
    where cno = #{cno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where cno = #{cno,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hp.util.CustomerExample">
    delete from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hp.util.Customer">
    insert into customer (cno, empno, cname, 
      sex, education, sal, 
      tel, money, remarks
      )
    values (#{cno,jdbcType=INTEGER}, #{empno,jdbcType=INTEGER}, #{cname,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{sal,jdbcType=INTEGER}, 
      #{tel,jdbcType=VARCHAR}, #{money,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hp.util.Customer">
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cno != null">
        cno,
      </if>
      <if test="empno != null">
        empno,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="sal != null">
        sal,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cno != null">
        #{cno,jdbcType=INTEGER},
      </if>
      <if test="empno != null">
        #{empno,jdbcType=INTEGER},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="sal != null">
        #{sal,jdbcType=INTEGER},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hp.util.CustomerExample" resultType="java.lang.Long">
    select count(*) from customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update customer
    <set>
      <if test="record.cno != null">
        cno = #{record.cno,jdbcType=INTEGER},
      </if>
      <if test="record.empno != null">
        empno = #{record.empno,jdbcType=INTEGER},
      </if>
      <if test="record.cname != null">
        cname = #{record.cname,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.sal != null">
        sal = #{record.sal,jdbcType=INTEGER},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update customer
    set cno = #{record.cno,jdbcType=INTEGER},
      empno = #{record.empno,jdbcType=INTEGER},
      cname = #{record.cname,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      sal = #{record.sal,jdbcType=INTEGER},
      tel = #{record.tel,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hp.util.Customer">
    update customer
    <set>
      <if test="empno != null">
        empno = #{empno,jdbcType=INTEGER},
      </if>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="sal != null">
        sal = #{sal,jdbcType=INTEGER},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where cno = #{cno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hp.util.Customer">
    update customer
    set empno = #{empno,jdbcType=INTEGER},
      cname = #{cname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      sal = #{sal,jdbcType=INTEGER},
      tel = #{tel,jdbcType=VARCHAR},
      money = #{money,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR}
    where cno = #{cno,jdbcType=INTEGER}
  </update>


  <select id="selectZhaoJiaXin" parameterType="string" resultMap="BaseResultMap" >
    Select * from customer where sal>(select sal from customer where cname=#{cname})
  </select>
  <select id="selectShuangBiao" resultType="map">
    Select e.ename,d.dname,c.cname,c.sex,c.sal,c.money from dept d, emp e,customer c where d.deptno=e.deptno and e.empno=c.empno
  </select>
  <select id="selectShuangBiao1" resultType="map">
    	select e.ename,e.sex,e.age from emp e,dept d   where e.deptno=d.deptno and d.dname="汽车贷款部 " order by e.age desc
  </select>
  <select id="selectCustomer" resultType="map">
    select count(*) 总人数,avg(sal) 平均分数,education 学历 from customer group by education
  </select>
</mapper>