<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hp.dao.OrdersDAO">
  <resultMap id="BaseResultMap" type="com.hp.util.Orders">
    <id column="orders_id" jdbcType="INTEGER" property="ordersId" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="total_price" jdbcType="DOUBLE" property="totalPrice" />
    <result column="addr" jdbcType="VARCHAR" property="addr" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orders_id, person_id, total_price, addr
  </sql>
  <select id="selectByExample" parameterType="com.hp.util.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where orders_id = #{ordersId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where orders_id = #{ordersId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hp.util.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hp.util.Orders">
    insert into orders (orders_id, person_id, total_price, 
      addr)
    values (#{ordersId,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER}, #{totalPrice,jdbcType=DOUBLE}, 
      #{addr,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hp.util.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ordersId != null">
        orders_id,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="addr != null">
        addr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ordersId != null">
        #{ordersId,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="addr != null">
        #{addr,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hp.util.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.ordersId != null">
        orders_id = #{record.ordersId,jdbcType=INTEGER},
      </if>
      <if test="record.personId != null">
        person_id = #{record.personId,jdbcType=INTEGER},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.addr != null">
        addr = #{record.addr,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set orders_id = #{record.ordersId,jdbcType=INTEGER},
      person_id = #{record.personId,jdbcType=INTEGER},
      total_price = #{record.totalPrice,jdbcType=DOUBLE},
      addr = #{record.addr,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hp.util.Orders">
    update orders
    <set>
      <if test="personId != null">
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="addr != null">
        addr = #{addr,jdbcType=VARCHAR},
      </if>
    </set>
    where orders_id = #{ordersId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hp.util.Orders">
    update orders
    set person_id = #{personId,jdbcType=INTEGER},
      total_price = #{totalPrice,jdbcType=DOUBLE},
      addr = #{addr,jdbcType=VARCHAR}
    where orders_id = #{ordersId,jdbcType=INTEGER}
  </update>

<resultMap id="selectPersonByOrdersIdRM" type="com.hp.util.Orders" extends="BaseResultMap">
  <association property="person" javaType="com.hp.util.Person">
    <id column="id" property="id"/>
    <result column="name" property="name"/>
    <result column="gender" property="gender"/>
    <result column="birthday" property="birthday"/>
    <result column="address" property="address"/>
    <result column="score" property="score"/>
  </association>

</resultMap>
  <select id="selectPersonByOrdersId" resultMap="selectPersonByOrdersIdRM" parameterType="int">
    select * from orders o join person p on p.id=o.person_id where o.orders_id=#{ordersId}
  </select>
</mapper>